{"paragraphs":[{"text":"%md \n### 6.2. Data Loading","user":"anonymous","dateUpdated":"2020-09-04T07:57:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>6.2. Data Loading</h3>\n"}]},"apps":[],"jobName":"paragraph_1597938575334_780777289","id":"20191202-231611_505037606","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-09-04T07:57:19+0000","dateFinished":"2020-09-04T07:57:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14079"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-09-15T08:11:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1599443691267_-1685836634","id":"20200907-015451_673914485","dateCreated":"2020-09-07T01:54:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14080"},{"text":"%md\n#### Read CSV File\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Read CSV File</h4>\n"}]},"apps":[],"jobName":"paragraph_1597938575337_778084047","id":"20191203-041437_54786112","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14081"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-09-04T07:57:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1597981951015_-733607611","id":"20200821-035231_1660800724","dateCreated":"2020-08-21T03:52:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14082"},{"text":"%spark2\n\n//Read the raw CSV file int a Spark DataFrame\nval rawStudentData = spark\n                .read\n                .option(\"inferSchema\", \"true\")\n                .option(\"header\", \"true\")\n                .csv(\"/user/raj_ops/raw_data/student_scores.csv\")\n                .withColumnRenamed(\"Class Score\",\"ClassScore\")\n                .withColumnRenamed(\"Test Score\",\"TestScore\");\n                \n                \n            \n//Check Schema\nrawStudentData.printSchema();\n\n//Check Data\nrawStudentData.show(5)\n\n\n\n","user":"anonymous","dateUpdated":"2020-09-15T08:12:05+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rawStudentData: org.apache.spark.sql.DataFrame = [Student: string, Subject: string ... 2 more fields]\nroot\n |-- Student: string (nullable = true)\n |-- Subject: string (nullable = true)\n |-- ClassScore: double (nullable = true)\n |-- TestScore: double (nullable = true)\n\n+-------+---------+----------+---------+\n|Student|  Subject|ClassScore|TestScore|\n+-------+---------+----------+---------+\n|   Mike|     Math|      0.95|     2.37|\n|   Mike|Chemistry|       0.5|     1.18|\n|   Mike|  Physics|      0.48|     1.37|\n|   Mike|  Biology|      0.75|     2.79|\n|   Katy|     Math|      0.45|     1.79|\n+-------+---------+----------+---------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1597938575337_778084047","id":"20191203-030908_1177977425","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-09-15T08:12:05+0000","dateFinished":"2020-09-15T08:12:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14083"},{"text":"%md\n#### Create Partitioned HDFS Store","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Create Partitioned HDFS Store</h4>\n"}]},"apps":[],"jobName":"paragraph_1597938575337_778084047","id":"20191203-031932_1944853120","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14084"},{"text":"%spark2\n//Store CSV as Paraquet file in HDFS for better performance.\n//Partition by Subject - provides limited list of partitions\n\nrawStudentData.write\n            .format(\"parquet\")\n            .mode(\"overwrite\")\n            .option(\"compression\", \"gzip\")\n            .partitionBy(\"Subject\")\n            .save(\"/user/raj_ops/partitioned_student\")\n            \n            \n            ","user":"anonymous","dateUpdated":"2020-09-15T08:15:15+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1597938575338_779238294","id":"20191203-031906_685961670","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-09-15T08:15:15+0000","dateFinished":"2020-09-15T08:15:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14085"},{"text":"%md\n#### Read partitioned data into Data Frame","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Read partitioned data into Data Frame</h4>\n"}]},"apps":[],"jobName":"paragraph_1597938575338_779238294","id":"20191203-032002_701118393","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14086"},{"text":"%spark\nval studentData = spark.read\n                    .parquet(\"/user/raj_ops/partitioned_student\")\n\nprintln(\"Partitions in student data : \" + studentData.rdd.getNumPartitions)","user":"anonymous","dateUpdated":"2020-09-04T08:18:03+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"studentData: org.apache.spark.sql.DataFrame = [Student: string, ClassScore: double ... 2 more fields]\nPartitions in student data : 2\n"}]},"apps":[],"jobName":"paragraph_1597938575338_779238294","id":"20191203-032021_1943911918","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-09-04T08:18:03+0000","dateFinished":"2020-09-04T08:18:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14087"},{"text":"%spark\n","user":"anonymous","dateUpdated":"2020-09-04T08:18:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1599207518421_1639719786","id":"20200904-081838_1680334530","dateCreated":"2020-09-04T08:18:38+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:14088"},{"text":"%md\n\n### 6.3. Total Score Analytics\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>6.3. Total Score Analytics</h3>\n"}]},"apps":[],"jobName":"paragraph_1597938575339_778853545","id":"20191205-033759_669527434","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14089"},{"text":"%md\n####  Compute Total Score by Student and Subject","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Compute Total Score by Student and Subject</h4>\n"}]},"apps":[],"jobName":"paragraph_1597938575339_778853545","id":"20191202-231748_914235504","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14090"},{"text":"%spark2\n\n//Transform / Map operation to add up columns for each row\nval totalScore = studentData.withColumn(\"TotalScore\", \n                            studentData.col(\"ClassScore\") \n                            + studentData.col(\"TestScore\"))\n                            \ntotalScore.show()\n\nprintln(\"-------------------------------EXPLAIN------------------------------------\")\ntotalScore.explain\nprintln(\"-------------------------------END EXPLAIN--------------------------------\\n\")","user":"anonymous","dateUpdated":"2020-08-21T04:30:06+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"totalScore: org.apache.spark.sql.DataFrame = [Student: string, ClassScore: double ... 3 more fields]\n+-------+----------+---------+---------+------------------+\n|Student|ClassScore|TestScore|  Subject|        TotalScore|\n+-------+----------+---------+---------+------------------+\n|   Mike|      0.95|     2.37|     Math|3.3200000000000003|\n|   Katy|      0.45|     1.79|     Math|              2.24|\n|    Bob|      0.36|     2.37|     Math|              2.73|\n|   Lisa|      0.33|     2.86|     Math|              3.19|\n|   John|      0.27|      1.2|     Math|              1.47|\n|   Mike|      0.48|     1.37|  Physics|              1.85|\n|   Katy|      0.34|     2.72|  Physics|              3.06|\n|    Bob|      0.93|     2.89|  Physics|3.8200000000000003|\n|   Lisa|      0.42|     2.34|  Physics|              2.76|\n|   John|      0.82|      2.8|  Physics|3.6199999999999997|\n|   Mike|       0.5|     1.18|Chemistry|              1.68|\n|   Katy|      0.39|     1.21|Chemistry|               1.6|\n|    Bob|      0.86|     1.26|Chemistry|              2.12|\n|   Lisa|      0.64|     1.05|Chemistry|              1.69|\n|   John|      0.44|     2.76|Chemistry|3.1999999999999997|\n|   Mike|      0.75|     2.79|  Biology|              3.54|\n|   Katy|      0.57|     2.35|  Biology|              2.92|\n|    Bob|      0.52|     2.87|  Biology|              3.39|\n|   Lisa|      0.39|     1.53|  Biology|              1.92|\n|   John|      0.41|     2.71|  Biology|              3.12|\n+-------+----------+---------+---------+------------------+\n\n-------------------------------EXPLAIN------------------------------------\n== Physical Plan ==\n*Project [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, (ClassScore#2060 + TestScore#2061) AS TotalScore#2069]\n+- *FileScan parquet [Student#2059,ClassScore#2060,TestScore#2061,Subject#2062] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://sandbox-hdp.hortonworks.com:8020/user/raj_ops/partitioned_student], PartitionCount: 4, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Student:string,ClassScore:double,TestScore:double>\n-------------------------------END EXPLAIN--------------------------------\n\n"}]},"apps":[],"jobName":"paragraph_1597938575340_776929800","id":"20191203-032311_1452742204","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-08-21T04:30:06+0000","dateFinished":"2020-08-21T04:30:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14091"},{"text":"%md\n#### Print Total Score for Physics for all Students\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h4>Print Total Score for Physics for all Students</h4>\n"}]},"apps":[],"jobName":"paragraph_1597938575340_776929800","id":"20191203-033435_816765560","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14092"},{"text":"%spark2\n\n\n//Filter use  case. This should trigger a filter pushdown for the subject partition\nval physicsScore = totalScore.filter($\"Subject\" === \"Physics\")\n\nphysicsScore.show()\n\nprintln(\"-------------------------------EXPLAIN------------------------------------\")\nphysicsScore.explain\nprintln(\"-------------------------------END EXPLAIN--------------------------------\\n\")","dateUpdated":"2020-08-20T15:49:35+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+----------+---------+-------+------------------+\n|Student|ClassScore|TestScore|Subject|        TotalScore|\n+-------+----------+---------+-------+------------------+\n|   Mike|      0.48|     1.37|Physics|              1.85|\n|   Katy|      0.34|     2.72|Physics|              3.06|\n|    Bob|      0.93|     2.89|Physics|3.8200000000000003|\n|   Lisa|      0.42|     2.34|Physics|              2.76|\n|   John|      0.82|      2.8|Physics|3.6199999999999997|\n+-------+----------+---------+-------+------------------+\n\n-------------------------------EXPLAIN------------------------------------\n== Physical Plan ==\n*(1) Project [Student#251, ClassScore#252, TestScore#253, Subject#254, (ClassScore#252 + TestScore#253) AS TotalScore#260]\n+- *(1) FileScan parquet [Student#251,ClassScore#252,TestScore#253,Subject#254] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://sandbox-hdp.hortonworks.com:8020/user/raj_ops/partitioned_student], PartitionCount: 1, PartitionFilters: [isnotnull(Subject#254), (Subject#254 = Physics)], PushedFilters: [], ReadSchema: struct<Student:string,ClassScore:double,TestScore:double>\n-------------------------------END EXPLAIN--------------------------------\n\nphysicsScore: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Student: string, ClassScore: double ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1597938575341_776545051","id":"20191203-033539_171289158","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14093"},{"text":"%md\n### 6.4. Compute Average Total Score for each student across Subjects\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>6.4. Compute Average Total Score for each student across Subjects</h3>\n"}]},"apps":[],"jobName":"paragraph_1597938575341_776545051","id":"20191202-231830_196392886","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14094"},{"text":"%spark2\n\n//Cache the totalScore data frame so TotalScore does not get recomputed each time\ntotalScore.cache()\n\n//Group by Key operation. \nval avgScore = totalScore\n                    .groupBy(\"Student\")\n                    .avg(\"TotalScore\")\n                    \navgScore.show(10)\n\nprintln(\"-------------------------------EXPLAIN------------------------------------\")\navgScore.explain\nprintln(\"-------------------------------END EXPLAIN--------------------------------\\n\")\n","user":"anonymous","dateUpdated":"2020-08-21T05:45:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res349: totalScore.type = [Student: string, ClassScore: double ... 3 more fields]\navgScore: org.apache.spark.sql.DataFrame = [Student: string, avg(TotalScore): double]\n+-------+------------------+\n|Student|   avg(TotalScore)|\n+-------+------------------+\n|    Bob|             3.015|\n|   John|            2.8525|\n|   Mike|            2.5975|\n|   Lisa|2.3899999999999997|\n|   Katy|             2.455|\n+-------+------------------+\n\n-------------------------------EXPLAIN------------------------------------\n== Physical Plan ==\n*HashAggregate(keys=[Student#2059], functions=[avg(TotalScore#2069)])\n+- Exchange hashpartitioning(Student#2059, 200)\n   +- *HashAggregate(keys=[Student#2059], functions=[partial_avg(TotalScore#2069)])\n      +- InMemoryTableScan [Student#2059, TotalScore#2069]\n            +- InMemoryRelation [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, TotalScore#2069], true, 10000, StorageLevel(disk, memory, deserialized, 1 replicas)\n                  +- *Project [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, (ClassScore#2060 + TestScore#2061) AS TotalScore#2069]\n                     +- *FileScan parquet [Student#2059,ClassScore#2060,TestScore#2061,Subject#2062] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://sandbox-hdp.hortonworks.com:8020/user/raj_ops/partitioned_student], PartitionCount: 4, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Student:string,ClassScore:double,TestScore:double>\n-------------------------------END EXPLAIN--------------------------------\n\n"}]},"apps":[],"jobName":"paragraph_1597938575341_776545051","id":"20191203-032820_1691366485","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-08-21T05:45:07+0000","dateFinished":"2020-08-21T05:45:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14095"},{"text":"%md\n###  6.5. Find Top Student by Subject\n\n\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>6.5. Find Top Student by Subject</h3>\n"}]},"apps":[],"jobName":"paragraph_1597938575342_777699298","id":"20191202-232012_79488213","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14096"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-08-21T05:45:29+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1597938575342_777699298","id":"20191207-234319_1148024301","dateCreated":"2020-08-20T15:49:35+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14097"},{"text":"%spark2\n\n//Find the top score for each subject, total's largest is top\nval topScore = totalScore.groupBy(\"Subject\")\n                    .agg(max(\"TotalScore\").alias(\"TopScore\"))\n\n\ntopScore.show()\n\n//Find the student who scored the top score.\nval topStudent = totalScore.as(\"a\")\n                    .join(topScore.as(\"b\"), \n                            $\"b.TopScore\" === $\"a.TotalScore\"\n                            &&  $\"b.Subject\" === $\"a.Subject\"  )\n                    .select(\"a.Subject\",\"a.Student\",\"TopScore\")\n                    \ntopStudent.show()\n\nprintln(\"-------------------------------EXPLAIN------------------------------------\")\ntopStudent.explain\nprintln(\"-------------------------------END EXPLAIN--------------------------------\\n\")","user":"anonymous","dateUpdated":"2020-08-21T06:22:09+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"topScore: org.apache.spark.sql.DataFrame = [Subject: string, TopScore: double]\n+---------+------------------+\n|  Subject|          TopScore|\n+---------+------------------+\n|     Math|3.3200000000000003|\n|Chemistry|3.1999999999999997|\n|  Physics|3.8200000000000003|\n|  Biology|              3.54|\n+---------+------------------+\n\ntopStudent: org.apache.spark.sql.DataFrame = [Subject: string, Student: string ... 1 more field]\n+---------+-------+------------------+\n|  Subject|Student|          TopScore|\n+---------+-------+------------------+\n|     Math|   Mike|3.3200000000000003|\n|  Physics|    Bob|3.8200000000000003|\n|Chemistry|   John|3.1999999999999997|\n|  Biology|   Mike|              3.54|\n+---------+-------+------------------+\n\n-------------------------------EXPLAIN------------------------------------\n== Physical Plan ==\n*Project [Subject#2062, Student#2059, TopScore#2537]\n+- *BroadcastHashJoin [TotalScore#2069, Subject#2062], [TopScore#2537, Subject#2577], Inner, BuildRight\n   :- *Filter (isnotnull(Subject#2062) && isnotnull(TotalScore#2069))\n   :  +- InMemoryTableScan [Student#2059, Subject#2062, TotalScore#2069], [isnotnull(Subject#2062), isnotnull(TotalScore#2069)]\n   :        +- InMemoryRelation [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, TotalScore#2069], true, 10000, StorageLevel(disk, memory, deserialized, 1 replicas)\n   :              +- *Project [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, (ClassScore#2060 + TestScore#2061) AS TotalScore#2069]\n   :                 +- *FileScan parquet [Student#2059,ClassScore#2060,TestScore#2061,Subject#2062] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://sandbox-hdp.hortonworks.com:8020/user/raj_ops/partitioned_student], PartitionCount: 4, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Student:string,ClassScore:double,TestScore:double>\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, double, false], input[0, string, true]))\n      +- *Filter isnotnull(TopScore#2537)\n         +- *HashAggregate(keys=[Subject#2577], functions=[max(TotalScore#2069)])\n            +- Exchange hashpartitioning(Subject#2577, 200)\n               +- *HashAggregate(keys=[Subject#2577], functions=[partial_max(TotalScore#2069)])\n                  +- *Filter isnotnull(Subject#2577)\n                     +- InMemoryTableScan [Subject#2577, TotalScore#2069], [isnotnull(Subject#2577)]\n                           +- InMemoryRelation [Student#2574, ClassScore#2575, TestScore#2576, Subject#2577, TotalScore#2069], true, 10000, StorageLevel(disk, memory, deserialized, 1 replicas)\n                                 +- *Project [Student#2059, ClassScore#2060, TestScore#2061, Subject#2062, (ClassScore#2060 + TestScore#2061) AS TotalScore#2069]\n                                    +- *FileScan parquet [Student#2059,ClassScore#2060,TestScore#2061,Subject#2062] Batched: true, Format: Parquet, Location: InMemoryFileIndex[hdfs://sandbox-hdp.hortonworks.com:8020/user/raj_ops/partitioned_student], PartitionCount: 4, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Student:string,ClassScore:double,TestScore:double>\n-------------------------------END EXPLAIN--------------------------------\n\n"}]},"apps":[],"jobName":"paragraph_1597938575343_777314549","id":"20191202-232036_2145772318","dateCreated":"2020-08-20T15:49:35+0000","dateStarted":"2020-08-21T06:22:09+0000","dateFinished":"2020-08-21T06:22:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14098"},{"text":"%spark2\n","dateUpdated":"2020-08-20T15:49:35+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1597938575343_777314549","id":"20191203-034404_1004574601","dateCreated":"2020-08-20T15:49:35+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14099"}],"name":"SparkCourse/Analyze Student Scores","id":"2FH772ZFF","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}